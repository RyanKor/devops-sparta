name: Build, Push Docker Image and Deploy to AWS EC2

on:
  push:
    paths:
      - '.github/workflows/aws_cicd_final.yaml'

jobs:
  build-and-push:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest

    steps:
      # 1. 코드 체크아웃
      - name: Check out the repository
        uses: actions/checkout@v3

      # 커스텀 액션 호출
      - name: Run my custom Docker build/test/push action
        uses: ./.github/actions/custom-docker-build
        with:
          # 위 action.yml에서 정의한 inputs
          image_name: "ryankor/devops-sparta"
          image_tag: "aws-cicd-final-0.0.1"
          context: "04-test-fastapi"
          file: "04-test-fastapi/Dockerfile"

          만약 사용자/패스워드를 받아야 한다면(위 action.yml에서 추가했다면):
          docker_username: ${{ secrets.DOCKER_USERNAME }}
          docker_password: ${{ secrets.DOCKER_PASSWORD }}

  deploy-to-ec2:
    name: Deploy to AWS EC2
    needs: build-and-push
    runs-on: ubuntu-latest

    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1  # 해당하는 AWS 리전으로 변경

      - name: Run deployment script on EC2 via SSM
        run: |
          aws ssm send-command \
            --instance-ids "${{ secrets.EC2_INSTANCE_ID }}" \
            --document-name "AWS-RunShellScript" \
            --comment "Deploy Docker container" \
            --parameters '{"commands": [
              "set -e",
              "if ! command -v docker &> /dev/null",
              "then",
              "  echo \"Docker not found. Installing Docker...\"",
              "  sudo apt-get update -y",
              "  sudo apt-get install -y ca-certificates curl gnupg lsb-release",
              "  sudo mkdir -p /etc/apt/keyrings",
              "  curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg",
              "  echo \"deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable\" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null",
              "  sudo apt-get update -y",
              "  sudo apt-get install -y docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin",
              "  sudo usermod -aG docker $USER",
              "  echo \"Docker installed successfully.\"",
              "else",
              "  echo \"Docker is already installed.\"",
              "fi",
              "echo \"${{ secrets.DOCKERHUB_PASSWORD }}\" | docker login -u \"${{ secrets.DOCKERHUB_USERNAME }}\" --password-stdin",
              "if [ \"$(docker ps -q -f name=aws-fastapi-final)\" ]; then docker stop aws-fastapi-final; fi",
              "if [ \"$(docker ps -aq -f status=exited -f name=aws-fastapi-final)\" ]; then docker rm aws-fastapi-final; fi",
              "docker pull ${{ secrets.DOCKERHUB_USERNAME }}/devops-sparta:aws-cicd-final-0.0.1",
              "docker run -d -p 8000:8000 --name aws-fastapi-final ${{ secrets.DOCKERHUB_USERNAME }}/devops-sparta:aws-cicd-final-0.0.1",
              "echo \"Docker container deployed successfully.\""
            ]}' \
            --timeout-seconds 600 \
            --output text
